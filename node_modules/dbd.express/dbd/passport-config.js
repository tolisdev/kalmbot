const LocalStrategy = require("passport-local").Strategy;
const bcrypt = require("bcrypt")

function initialize(passport, findUser, findUserByID) {
  
  const authenticateUser = async (username, password, done) => {
    const user = findUser(username)
    if (!user) {
      return done(null, false, { message: "Incorrect/Invalid Username or Password!"})
    }
    
    try {

      if (await bcrypt.compare(password, user.password)) {
        return done(null, user)
      } else {
        return done(null, false, {message:"Incorrect/Invalid Username or Password!"})
      }

    } catch (error) {
      return done(error)
    }

    
  }

  passport.use(new LocalStrategy({usernameField:"username"}, authenticateUser))
  passport.serializeUser((user, done) => done(null, user.id))
    passport.deserializeUser((id, done) => done(null, findUserByID(id)))

}

module.exports = initialize