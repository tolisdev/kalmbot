const Socket = io()
const form = document.querySelector("#FormF")
const prop = document.querySelector("#FormProperty")

form.addEventListener("submit", function(k) {
  k.preventDefault();
  Socket.emit("COMMAND_MODIFY", $("#FormF").serializeArray())
  if (!($("#FormF").serializeArray()).find(f => f.name === "id").value) {
    document.location.href = "/commands"
  } else {
  const text = "<div id='savedtext' class='rounded-1 text-white p-2 mb-3' style='background-color:blueviolet;'><p style='font-size:1.3rem;'>Saved Successfully</p></div>"
  $("#FormF").prepend(text)
  window.setTimeout(function() {
    $("#savedtext").remove()
  }, 5000)
  }
})

prop.addEventListener("submit", function(k) {
  k.preventDefault();
  const FormOne = $("#FormF").serializeArray()
  const returnError = `<div id='proptext' class='bg-danger rounded-1 text-white p-2 mb-3'><p style='font-size:1.3rem;'>Duplicated Property Found!</p></div>`
  const returnSuccess = `<div id='proptext' class=' rounded-1 text-white p-2 mb-3' style='background-color:#00ff00;'><p style='font-size:1.3rem;'>Added Property!</p></div>`
  const data = $("#FormProperty").serializeArray()[0]

  if (FormOne.map(f => (f.name === data.value)).includes(true)) {
    $("#FormProperty").prepend(returnError)
    return window.setTimeout(function() {
    $("#proptext").remove()
  }, 2000)

  }

  const text = `<div id='${data.value}' class='mb-3'><label for='${data.value}' class='form-label display-6'><i class="hover-click bi bi-x-circle" style="color:red;" onclick="DeleteProperty('${data.value}')"></i> Command ${data.value}:</label><textarea class="form-control " rows="2" name="${data.value}" id="${data.value}" placeholder="The ${data.value} of the command" ></textarea></div>`
  $("#extraProperty").append(text)
  $("#FormProperty").prepend(returnSuccess)
  prop.reset()
  window.setTimeout(function() {
    $("#proptext").remove()
  }, 2000)
})