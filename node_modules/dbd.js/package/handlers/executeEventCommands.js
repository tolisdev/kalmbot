const interpreter = require("../interpreter.js")

module.exports = async (client, command, eventdata) => {
  const data = {
      author: undefined,
      member: undefined,
      guild: undefined
    }

    let newCommand = {
      channel:command.channel,
      code:command.code
    }
    
    const id = await interpreter(client, data, [], {
      channel: command.channel,
      code: command.channel
    }, undefined, true)

    const channel = client.channels.cache.get(id)

    if (!channel) return console.error(`channel with ID ${id} does not exist`)
    
    data.channel = channel

    const howmuch = command.code.match(/\$eventData/g) !== null ? command.code.match(/\$eventData/g).length : 0
    let i = 0

    loop:
    while (i < howmuch) {
      const bool = execute()
      i++
    }

    function execute() {
      const r = newCommand.code.split("$eventData").length - 1
      const inside = newCommand.code.split("$eventData")[r].after()

      if (inside.inside) {
        try {
          let response = "undefined"
        
          if (typeof eventdata === "object" || typeof eventdata === "array") {
       response = eval("eventdata."+inside.inside.addBrackets())

          } else {
            response = eventdata
          }

       if (typeof response === "object" || typeof response === "array") { response = "undefined"
       }

        newCommand.code = newCommand.code.replaceLast(`$eventData${inside.total}`, response || "undefined")
        return false
        } catch (error) {
          console.log(error)
          newCommand.code = newCommand.code.replaceLast(`$eventData${inside.total}`, "undefined")
        }
      } else {
        newCommand.code = newCommand.code.replaceLast(`$eventData`, require('util').inspect(eventdata, {depth:0}))
      }

    }

    await interpreter(client, data, [], newCommand, undefined) 
}