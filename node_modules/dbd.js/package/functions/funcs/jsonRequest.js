const errorHandler = require("../../handlers/errors.js")
const fetch = require("../../handlers/request")

module.exports = async d => {

	const code = d.command.code

	const r = code.split("$jsonRequest").length - 1

	const inside = code.split("$jsonRequest[")[r].split("]")[0]

	const headers = {}
	const [url, get = '', error, ...header] = inside.split(";")

	for (let head of header) {
		head = head.addBrackets()

		const [headName, ...headValue] = head.split(':')

		headers[headName.addBrackets()] = headValue.join(':').addBrackets()
	}

	const request = await fetch(url.addBrackets(), { headers }).catch(err => { })

	if (!request) {
		if (error) errorHandler(d, error)

		return
	}

	let response

	if (request.json && get.length) {
		response = request.json
	} else {
		response = request.text
	}

	if (!response) {
		if (error) errorHandler(d, error)

		return
	}

	let req = response

	if (response instanceof Object && get.length) {
		try {
			const g = get.addBrackets()

			req = eval(`response` + (["[", "."].some(e => g.startsWith(e)) ? g : `.${g}`)) || ""
		} catch {
			if (error) errorHandler(d, error)

			return
		}
	}

	return {
		code: code.replaceLast(`$jsonRequest[${inside}]`, typeof req === "string" ? req.removeBrackets() : req || "")
	}
}