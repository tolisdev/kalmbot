const { splitArray } = require('dbd.db/lib/bison')

module.exports = async d => {
    const code = d.command.code

    const r = code.split("$numberSeparator[").length - 1

    const inside = code.split("$numberSeparator[")[r].split("]")[0]

    const [
        number,
        separator = ','
    ] = inside.split(";")

    if (isNaN(Number(number))) return d.error(`:x: Invalid number in \`$numberSeparator[${inside}]\``)

	const separated = await splitArray(number.split('').reverse(), 3).then(nums => {
		return nums.reverse().map(num => num.reverse().join(''))
	})

    return {
        code: code.replaceLast(`$numberSeparator[${inside}]`, separated.join(separator))
    }
}