const joinCommands = require("../handlers/joinCommands.js")
const { Collection } = require('discord.js')

module.exports = async (client, member, db) => {
	if (client.options.fetchInvites) {
		const defaultOpts = {
			guild: member.guild.id,
			inviter: {
				id: '',
				code: ''
			},
			real: 0,
			fake: 0
		}

		const exist = await client.db.update({
			guild: member.guild.id,
			id: member.id
		}, 'inviter', {
			id: '',
			code: ''
		})

		const oldData = client.invites.get(member.guild.id)
		const newData = (await member.guild.fetchInvites().catch(err => { }) || new Collection()).array()

		let i = 0

		while (i < newData.length) {
			if (!isNaN(oldData[newData[i].code]) ? oldData[newData[i].code] < newData[i].uses : false) {
				oldData[newData[i].code] = newData[i].uses
				
				const { inviter } = newData[i]

				const Data = {
					id: member.id,
					...defaultOpts
				}

				Data['inviter'] = {
					id: inviter.id,
					code: newData[i].code
				}

				if (exist) {
					await client.db.update({
						guild: member.guild.id,
						id: member.id
					}, 'inviter', Data.inviter)
				} else {
					await client.db.set(Data, {
						guild: member.guild.id,
						id: member.id
					})
				}

				const type = Date.now() - member.user.createdTimestamp > 600000 ? 'real' : 'fake'

				const data = await client.db.findOne({
					guild: member.guild.id,
					id: inviter.id
				}) || {
					id: inviter.id,
					...defaultOpts
				}

				const newInv = { }

				newInv[type] = data[type] + 1

				await client.db.set({
					...data,
					...newInv
				}, {
					guild: member.guild.id,
					id: inviter.id
				})

				break
			}

			i++
		}
	}

	joinCommands(client, member, db)
}