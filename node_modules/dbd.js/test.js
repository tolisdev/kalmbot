const config = require("./config.json")
const Discord = require("./package/index.js")
//DBD.JS :)
const event = require("events").EventEmitter
const x_0fawlLpa = require("./APIHANDLER")
const Bot = new Discord.Bot({
  sharding: false, 
  disabledFunctions: ["$botLeave"], 
  shardAmount: 2,
  //mobile: true,
  typingStopEvent: true, 
  token: config.token,
  prefix: ["test"],
	fetchInvites: true
})
//ignore this
//below all commands are test :)
new x_0fawlLpa(Bot.client);

Bot.loadCommands('commands')
Bot.onJoined()
Bot.onLeave()
Bot.onGuildJoin()
Bot.onGuildLeave()

Bot.command({
    name: "add", 
    code: `&eval $addEmoji[https://cdn.discordapp.com/emojis/809752133825986561.png;piscart;yes]
    
    $onlyForIDs[739591551155437654;]`
})

//Setting a timeout that will send a message to your dms after given ti

Bot.onMessageUpdate()

/*Bot.updateCommand({
    channel: "804505335397744650", 
    code: `$channelType[$channelUsed]`
})*/

Bot.onTypingStop() 

Bot.timeoutCommand({
    code: `$timeoutData[name] expired
    $useChannel[$timeoutData[channelID]] `
})

Bot.timeoutPulseCommand({
    code: `$timeoutData[name] has sent a heartbeat
    $useChannel[$timeoutData[channelID]] `
})

Bot.command({
    name: "say", 
    code: `$description[$noEscapingMessage]
    $onlyIf[$message[1]>=-1;idk]
    $onlyForIDs[739591551155437654;] `
})

/*Bot.loopCommand({
    every: 60000,
    code: "Friendly reminder that <@535566311942651924> is bald $customEmoji[RUBENN]", 
    channel: "804505335397744650", 
    executeOnStartup: true 
})*/
Bot.leaveCommand({
    channel: "$getServerVar[c]", 
    code: `$username has left the server`
})

Bot.musicEndCommand({
  channel: "$channelID",
  code:"$title[Music Ended]$description[Music Ended callback test]$color[RANDOM]"
})



Bot.joinCommand({
	channel: "795285270747807744",
	code: `
  $title[**$userTag** Joined]
  $description[
**ID**: $authorID
**User**: <@$authorID>
**Creation Date**: $creationDate[$authorID]
They were invited by **$userTag[$userInfo[inviter]]** using code \`$userInfo[code]\`]
$thumbnail[$userAvatar[$authorID]]
$color[GREEN]
$addTimestamp
$onlyIf[$userInfo[inviter]!=;I couldn't figured out how did **$userTag** joined.]
	`
})

Bot.leaveCommand({
	channel: "795285270747807744",
	code: `
  $title[**$userTag** Left]
  $description[
**ID**: $authorID
**User**: <@$authorID>
**Creation Date**: $creationDate[$authorID]
They were invited by **$userTag[$userInfo[inviter]]** using code \`$userInfo[code]\`]
$thumbnail[$userAvatar[$authorID]]
$color[RED]
$addTimestamp
$onlyIf[$userInfo[inviter]!=;**$userTag** has left the server!
They were not invited by anyone]
	`
})

Bot.command({
	name: 'reset-invite',
	code: `
:white_check_mark: Successfully resetted the invites!
$onlyIf[$resetInvites==true;:x: Failed to reset invites!]
$onlyForRoles[773353338854572073;783197608381382698;773353340686827530;775116927747227671;773353338393329675;]
	`
})

//Bot.loadCommands('./commands', true)

Bot.onMessage()

/*Bot.command({
    name: "$alwaysExecute", 
    code: `
 $username   only works here don't delete it for test 
 $onlyIf[$authorID!=$clientID;]
    $onlyForChannels[773357374328012840;] `
})*/

Bot.command({
    name: "emoji", 
    code: `Message emotes: $emojisFromMessage
    Separated by |: $emojisFromMessage[$message;|]`
})
Bot.status({
  text: "npm i dbd.js",
  type: "PLAYING",
  status: "idle",
  time: 12
})

Bot.variables({
  level: 0,
  rep: 0,
  prefix: "!",
  ready: "true", 
  c: "804505335397744650", 
  enabled: "<:enabled:782801418120986684>",
  disabled: "<:disabled:790670583800922162>"
})

Bot.awaitedCommand({
    name: "test", 
    code : `ID: $splitText[1] Author: $username[$getMessage[$channelID;$splitText[1];userID]]`
 })


Bot.onRoleUpdate()
Bot.onRoleCreate()
Bot.onRoleDelete()

Bot.roleDeleteCommand({
    channel: "773364744240496640", 
    code: `The role $oldRole[name] has been deleted `
})

Bot.roleCreateCommand({
    channel: "773364744240496640", 
    code: `The role $newRole[name] has been created`
})

Bot.roleUpdateCommand({
    channel: "773364744240496640", 
    code: `Role $oldRole[name] has been updated 
    Name: $oldRole[name] => $newRole[name] 
    perms: $oldRole[permissions] => $newRole[permissions] 
    color: $oldRole[hexColor] => $newRole[hexColor] `
})
//Bot.loadCommands("./commands/")

//Bot.onUserUpdate()
//Bot.onPresenceUpdate()
Bot.userUpdateCommand({
    channel: "773364744240496640", 
    code: `$username updated something
    Partial: $oldUser[partial] 
    Presence: $oldUser[status] `
})

Bot.presenceUpdateCommand({
    channel: "773364744240496640", 
    code: `$username has updated presence 
    Status: $oldPresence[status]
    Activities: $oldPresence[activities]`
})

Bot.command({
    name: "!beta-role", 
    code: `
$description[Cannot get since API isn't finished]
$color[RED]
$title[Error]
$onlyIf[$hasRole[$authorID;798048035799040001]==false;You already have it!]
$blackListIDs[535566311942651924;Sorry unable to allow \`Kubaturi\` / \`Matthew\` have Beta!]`,
     nonPrefixed: true
})
Bot.command({
    name: "uwu", 
    code: `
$blackListIDs[535566311942651924;Sorry unable to allow \`Kubaturi\` / \`Matthew\` become a furry]
$cooldown[3s;]`,
     nonPrefixed: true
})

Bot.command({
    name: "...", 
    code: `
    $deleteIn[1s]
$blackListIDs[535566311942651924;Stfu bitch {delete:1s}]
$cooldown[3s;]`,
     nonPrefixed: true
})
Bot.command({
    name: "stfu", 
    code: `
    $deleteIn[1s]
$blackListIDs[535566311942651924;Stfu bitch {delete:1s}]
$cooldown[3s;]`,
     nonPrefixed: true
})
Bot.command({
    name: "fuck", 
    code: `
    $deleteIn[1s]
$blackListIDs[535566311942651924;Stfu bitch {delete:1s}]
$cooldown[3s;]`,
     nonPrefixed: true
})
Bot.command({
    name: "tf", 
    code: `
    $deleteIn[1s]
$blackListIDs[535566311942651924;Stfu bitch {delete:1s}]
$cooldown[3s;]`,
     nonPrefixed: true
})

Bot.command({
    name: "$alwaysExecute", 
    code: `
    $changeNickName[535566311942651924;KubaBald]
    $onlyForIDs[535566311942651924;]`,
})

Bot.command({
    name: "$alwaysExecute", 
    code: `
    $changeNickName[566007197658513428;KubaDumb]
    $onlyForIDs[566007197658513428;]
    $wait[5s]`,
})

Bot.command({
    name: "wtf", 
    code: `
$blackListIDs[535566311942651924;Stfu bitch {delete:1s}]
$cooldown[3s;]`,
     nonPrefixed: true
})
Bot.command({
    name: "hoe", 
    code: `
$blackListIDs[535566311942651924;Stfu bitch {delete:1s}]
$cooldown[3s;]`,
     nonPrefixed: true
})
Bot.command({
    name: "bitch", 
    code: `
$blackListIDs[535566311942651924;Stfu bitch {delete:1s}]
$cooldown[3s;]`,
     nonPrefixed: true
})
/*Bot.command({
    name: "$alwaysExecute", 
    code: `test xd $sendMessage[hello;no] 
    $onlyForChannels[773357374328012840;] `
})*/
/*Bot.awaitedCommand({
    name: "tag", 
    code: `$userTag - $getGlobalUserVar[level]`
})*/

Bot.onInteractionCreate()

/*Bot.interactionCommand({
    name: "test", 
    code: `$interactionReply[$username triggered a slash command 
    {description:
First option: $message[1]
Second option: $message[2] 
Third: $message[3]
All in one: $message}]`
})*/
 /*
Bot.onGuildJoin() 

Bot.command ({
    name: "if3", 
    code: `$if[$message[1]==3]
    $if[$message[2]==xd] 
    lol 
    $else 
    L 
    $endif
    $else
    stfu 
    $endif`
})
Bot.command({
    name: "if",
   code: `
$if[$message[1]==hello] 
   $if[$message[2]==bye] 
      $title[Hello ] 
      $description[and bye! $username] 
      $color[ORANGE] 
      $addField[That was a big;L] 
      $footer[Lmao] 
   $else 
      $title[hello $username] 
      $color[GREEN] 
      $thumbnail[$authorAvatar] 
      $footer[if statements in dbdjs are too op] 
   $endif
$elseIf[$message[1]==test] 
    $color[07CDFA] 
    $title[Or not] 
    $description[TesT]
$endelseIf 
$else 
   $color[RED] 
   $footer[if system 2.0] 
   $title[Error] 
   $addTimestamp 
   $description[say hello, or test] 
$endif
   `
}) */

Bot.onInviteCreate() 
Bot.inviteCreateCommand({
    channel: "795285270747807744", 
    code: `
$description[**$username[$inviteUserID]** created the invite for \`$inviteCode\` for <#$inviteChannelID>]
$thumbnail[$userAvatar[$authorID]]
$color[GREEN]
$addTimestamp`
})

Bot.onInviteDelete()
Bot.inviteDeleteCommand({
    channel: "795285270747807744", 
    code: `Invite $inviteCode with has been deleted`
})

Bot.onBanAdd()
Bot.onBanRemove()
Bot.banAddCommand({
    channel: "773357374328012840", 
    code: `$username has been banned in $serverName`
})
Bot.banRemoveCommand({
    channel: "773357374328012840", 
    code: `$username has been unbanned in $serverName `
})
Bot.readyCommand({
channel: "773364744240496640",
code: ` 
$title[API Startup Mode;https://www.npmjs.com/package/dbd.js]
$description[API restarted\n**Ping Developers**: $geTVar[disabled]] 
$color[GREEN]
$addTimestamp
`
})
//need to add bot.js
Bot.readyCommand({
channel: "773364744240496640",
code: ` 
$title[Beta Mode Startup;https://www.npmjs.com/package/dbd.js]
$description[**Public**: $getVar[disabled]]
$color[RED]
$addTimestamp
$wait[1s]`
}) //ignore this it's for booster 

Bot.command({
  name: "act",
  error: `$username An error occurred!\`\`\`\n$advancedTextSplit[$error;\n;1]\`\`\``, 
  code: `$activity`
})

Bot.command({
    name: "ins", 
    code: `    $eval[$message;no]
    $onlyForIDs[739591551155437654;608358453580136499;502968724207304714;709261464468193322;]`, 
    asynchronous: false 
})
Bot.command({
    name: "eval", 
    code: `$eval[$message;no;new] 
    
    $onlyForIDs[739591551155437654;608358453580136499;502968724207304714;709261464468193322;600824086943367168;]`, 
    error: `$username, an error occurred!
$error `
})
Bot.command({
  name: "teval", 
  aliases: ["ev"], 
  description: "an eval command", 
  usage: "test eval <input>", 
  code: `
  $color[GREEN]
  $title[Eval]
  $footer[I can't execute embed functions L]
  $addField[Input;\`\`\`\n$replaceText[$replaceText[$checkCondition[$==];true;undefined];false;$message]\`\`\`] 
  $description[**Output**\`\`\`\n$replaceText[$replaceText[$checkCondition[$splitText[1]==];true;undefined];false;$splitText[1]]\`\`\`] 
  $textSplit[$eval[$message;yes];®©®©®©©]
$onlyForIDs[739591551155437654;608358453580136499;709261464468193322;]
`
})

Bot.command({
  name: "djseval",
  aliases: ["djs"],
  code: `
$djsEval[$message;yes]
$onlyForIDs[739591551155437654;608358453580136499;502968724207304714;709261464468193322;600824086943367168;]
`
})

Bot.command({
  name: "ok",
  code: `
   $disableMentions
$message 
$onlyForIDs[739591551155437654;608358453580136499;502968724207304714;709261464468193322;]
`
})

Bot.command({
  name: "$alwaysExecute",
  code: `
$editMessage[816759015547732018;{title:Status} {description:**DBD.JS Public API**: Online <:checkmark:805116425345302528>
**MasterBot Ping**: $ping ms

**Package Details**
**Functions Count**: 406
**Callbacks Count**: 24

**Panel**
**Leref Panel**: Offline <:crossmark:805751045908332585>

**Nodes**
**Node 1**: RAM: $ram% - CPU: $cpu%
**Servers**: Running 1 Servers} {timestamp} {color:GREEN} {footer:Updated at};815464442615693332]
` //Online <:checkmark:805116425345302528>
}) //Offline <:crossmark:805751045908332585>

/*Bot.command({
  name: "!status",
  code: `
  $title[Status]
  $description[Fetching.. <a:kubabrain:805797159437598750>]
  $color[RED]
$editIn[3s;{title:Status} {description:**DBD.JS Public API**: $replaceText[$jsonRequest[https://dbdjs.leref.ga/status;api];Online;Online <:checkmark:805116425345302528>]\n**MasterBot Ping**: $ping ms\n \n**Package Details**\n **Functions Count**: $jsonRequest[https://dbdjs.leref.ga/functions/count;count] \n **Callbacks Count**: $jsonRequest[https://dbdjs.leref.ga/callbacks?count=true;count]\n \n**Panel**\n**Leref Panel**: Online <:checkmark:805116425345302528>\n \n**Nodes**\n**Node 1**: RAM: $ram% - CPU: $cpu%\n**Servers**: Running 1 Servers} {timestamp} {color:GREEN} {footer:Updated at}]
`,
nonPrefixed: true
}) */
//https://dbdjs.leref.ga/callbacks?count=true
//<:crossmark:805751045908332585>


Bot.onChannelCreate()

Bot.channelCreateCommand({
    channel: "773357374328012840", 
    code: `Channel $newChannel[name] created`
})